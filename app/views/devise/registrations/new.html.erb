<div class="navbar-placeholder"></div>

<div class="form-container">
  <div class="container">
    <div class="row">
      <div class="col-xs-12 col-sm-8 col-sm-offset-2 col-md-6 col-md-offset-3">

        <h2><%= t(".sign_up") %></h2>

        <%= simple_form_for(resource, as: resource_name, url: registration_path(resource_name)) do |f| %>
          <%= f.error_notification %>

          <div class="form-inputs">
            <h3> <%= t('forms.about_you') %> </h3>
            <%= f.input :first_name, label: false, autofocus: true, placeholder: t('placeholders.first_name') %>
            <%= f.input :last_name, label: false, placeholder: t('placeholders.last_name') %>
            <%= f.input :email, label: false, required: true, placeholder: t('placeholders.email') %>
            <%= f.input :password, label: false, required: true, placeholder: t('placeholders.password') %>
            <%= f.input :password_confirmation, label: false, required: true, placeholder: t('placeholders.password_confirmation') %>

            <hr>

            <h3> <%= t('forms.location') %> </h3>
            <%= f.input :latitude, as: :hidden, input_html: {value: session[:coords]['latitude']} %>
            <%= f.input :longitude, as: :hidden, input_html: {value: session[:coords]['longitude']} %>
            <div id="map" style="width: 100%; height: 30vh;"></div>
            <p id="update-map-message"></p>


            <br>
            <div class="secondary-button" id="update-map">
              <%= t('forms.refine') %>
            </div>
          </div>

          <hr>

          <div class="form-submit">
            <%= f.button :submit, t(".sign_up"), class: 'primary-button' %>
          </div>


        <% end %>

        <div class="form-links">
          <%= render "devise/shared/links" %>
        </div>

      </div>
    </div>
  </div>
</div>

<% content_for(:after_js) do %>
  <script>
    // 1.
    const mapContainer = document.querySelector('#map');
    const updateButton = document.querySelector('#update-map');
    const latInput = document.querySelector('input#nomad_latitude');
    const lngInput = document.querySelector('input#nomad_longitude');

    let userCoords = sessionStorageData() || getCoords();

    let mapOptions = {
        zoom: 12,
        center: userCoords,
        styles: <%= render 'nomads/map_style.js' %>,
        scrollwheel: false
      };

    // 2.
    function sessionStorageData() {
      // If lat and lng don't exist, the function return
      if (!sessionStorage.lat && !sessionStorage.lng) return;
      let lat = Number(sessionStorage.lat);
      let lng = Number(sessionStorage.lng);
      latInput.value = lat;
      lngInput.value = lng;
      return {lat: lat, lng: lng};
    }

    function getCoords() {
      let lat = Number(latInput.value);
      let lng = Number(lngInput.value);
      return {lat: lat, lng: lng}
    }

    function success(position) {
      // Updating userCoords with browser's position
      let newCoords = {lat: position.coords.latitude, lng: position.coords.longitude}
      // Updating form inputs with browser's position
      userCoords.lat = newCoords.lat;
      userCoords.lng = newCoords.lng;
      // Updating the map with the new values
      latInput.value = newCoords.lat;
      lngInput.value = newCoords.lng;
      // Saving new coords in client session
      sessionStorage.setItem('lat', newCoords.lat);
      sessionStorage.setItem('lng', newCoords.lng);
      // Refreshing the map with the new coords
      initMap();
      // Button text back to initial value
      updateButton.innerText = "<%= t('forms.refine') %>";
    }

    function error() {
      alert("You did not give access to your position")
    }

    function updatePosition() {
      if (!navigator.geolocation){
        alert("Geolocation is not supported by your browser");
        return;
      }
      updateButton.innerText = "Don't move! We're geofinding you..."
      navigator.geolocation.getCurrentPosition(success, error)
    }

    function initMap() {
      var map = new google.maps.Map(mapContainer, mapOptions);
      var marker = new google.maps.Marker({
        position: userCoords,
        map: map
      });
    };

    // 3.
    document.addEventListener('DOMContentLoaded', sessionStorageData);
    document.addEventListener('DOMContentLoaded', initMap);
    updateButton.addEventListener('click', updatePosition)
  </script>
<% end %>
